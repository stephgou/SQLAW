{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "FailoverClusterName": {
            "type": "string",
            "metadata": {
                "description": "Specify the Windows Failover Cluster Name"
            }
        },
        "existingVmList": {
            "type": "string",
            "metadata": {
                "description": "Specify comma separated list of names of SQL Server VM's to participate in the Availability Group (e.g. SQLVM1, SQLVM2). OS underneath should be at least WS 2016."
            }
        },
        "existingVmResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Specify resourcegroup name for existing Vms."
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "SqlServerVersion": {
            "allowedValues": [ "SQL2017", "SQL2016" ],
            "type": "string",
            "metadata": {
                "description": "Select the version of SQL Server present on all VMs in the list"
            }
        },
        "existingFullyQualifiedDomainName": {
            "type": "string",
            "metadata": {
                "description": "Specify the Fully Qualified Domain Name under which the Failover Cluster will be created. The VM's should already be joined to it. (e.g. contoso.com)"
            }
        },
        "existingOuPath": {
            "type": "string",
            "metadata": {
                "description": "Specify an optional Organizational Unit (OU) on AD Domain where the CNO (Computer Object for Cluster Name) will be created (e.g. OU=testou,OU=testou2,DC=contoso,DC=com). Default is empty."
            },
            "defaultValue": ""
        },
        "existingDomainAccount": {
            "type": "string",
            "metadata": {
                "description": "Specify the account for WS failover cluster creation in UPN format (e.g. example@contoso.com). This account can either be a Domain Admin or at least have permissions to create Computer Objects in default or specified OU."
            }
        },
        "DomainAccountPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Specify the password for the domain account"
            }
        },
        "existingSqlServiceAccount": {
            "type": "string",
            "metadata": {
                "description": "Specify the domain account under which SQL Server service will run for AG setup in UPN format (e.g. sqlservice@contoso.com)"
            }
        },
        "SqlServicePassword": {
            "type": "securestring",
            "metadata": {
                "description": "Specify the password for Sql Server service account"
            }
        },
        "CloudWitnessName": {
            "type": "string",
            "metadata": {
                "description": "Specify the name of the storage account to be used for creating Cloud Witness for Windows server failover cluster"
            },
            "defaultValue": "[concat('clwitness', uniqueString(resourceGroup().id))]"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "Location of resources that the script is dependent on such as linked templates and DSC modules"
            },
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-sql-vm-ag-setup"
        },
        "Location": {
            "type": "string",
            "metadata": {
                "description": "Location for all resources."
            },
            "defaultValue": "[resourceGroup().location]"
        }
    },
    "variables": {
        "existingVMListArray": "[split(parameters('existingVmList'),',')]",
        "GroupResourceId": "[resourceId('Microsoft.SqlVirtualMachine/SqlVirtualMachineGroups', parameters('FailoverClusterName'))]",
        "joinClusterTemplateURL": "[concat(parameters('_artifactsLocation'),'/nested/join-cluster.json')]",
        "joinClusterName": "joincluster",
        "settingUpAGPowerShellURL": "[concat(parameters('_artifactsLocation'),'/nested/Set-up-AG.ps1')]"

    },
    "resources": [
        {
            "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachines",
            "apiVersion": "2017-03-01-preview",
            "name": "[trim(variables('existingVMListArray')[copyIndex()])]",
            "tags": { "displayName": "SqlVirtualMachinesExtension" },
            "location": "[parameters('Location')]",
            "copy": {
                "name": "sqlvirtualMachineLoop",
                "count": "[length(variables('existingVMListArray'))]"
            },
            "properties": {
                "virtualMachineResourceId": "[resourceId(parameters('existingVmResourceGroup'), 'Microsoft.Compute/virtualMachines', trim(variables('existingVMListArray')[copyIndex()]))]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "name": "[parameters('CloudWitnessName')]",
            "tags": { "displayName": "WitnessStorageAccount" },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "location": "[parameters('Location')]",
            "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachineGroups",
            "apiVersion": "2017-03-01-preview",
            "name": "[parameters('FailoverClusterName')]",
            "tags": { "displayName": "SqlVirtualMachineGroups" },
            "location": "[parameters('Location')]",
            "properties": {
                "SqlImageOffer": "[concat(parameters('SqlServerVersion'),'-WS2016')]",
                "SqlImageSku": "Enterprise",
                "WsfcDomainProfile": {
                    "DomainFqdn": "[parameters('existingFullyQualifiedDomainName')]",
                    "OuPath": "[parameters('existingOuPath')]",
                    "ClusterBootstrapAccount": "[parameters('existingDomainAccount')]",
                    "ClusterOperatorAccount": "[parameters('existingDomainAccount')]",
                    "SqlServiceAccount": "[parameters('existingSqlServiceAccount')]",
                    "StorageAccountUrl": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('CloudWitnessName')), '2018-07-01').primaryEndpoints['blob']]",
                    "StorageAccountPrimaryKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('CloudWitnessName')), '2018-07-01').keys[0].value]"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "name": "[variables('joinClusterName')]",
            "tags": { "displayName": "joinClusterNestedExtension" },
            "dependsOn": [
                "[parameters('FailoverClusterName')]",
                "[parameters('CloudWitnessName')]",
                "sqlvirtualMachineLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('joinClusterTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "existingVirtualMachineNames": {
                        "value": "[variables('existingVMListArray')]"
                    },
                    "Location": {
                        "value": "[parameters('Location')]"
                    },
                    "existingVmResourceGroup": {
                        "value": "[parameters('existingVmResourceGroup')]"
                    },
                    "GroupResourceId": {
                        "value": "[variables('GroupResourceId')]"
                    },
                    "DomainAccountPassword": {
                        "value": "[parameters('DomainAccountPassword')]"
                    },
                    "SqlServicePassword": {
                        "value": "[parameters('SqlServicePassword')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('existingVMListArray')[copyIndex()],'/SQLAGCustomScriptExtension')]",
            "location": "[parameters('Location')]",
            "tags": { "displayName": "SQLAGCustomScriptExtension" },
            "copy": {
                "name": "extensionVirtualMachineLoop",
                "count": "[length(variables('existingVMListArray'))]"
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('joinClusterName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.7",
                "autoUpgradeMinorVersion":true,
                "settings": {
                    "fileUris": [
                    "[variables('settingUpAGPowerShellURL')]"
                ],
                "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File', variables('settingUpAGPowerShellURL'))]"
              }
            }
          }
    ]
}